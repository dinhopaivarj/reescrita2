import OpenAI from "openai";
import { getDynamicCaseStudies, generateValidInternalLinks, type DynamicCaseStudy } from "./dynamicCaseStudyService";

// Function to convert markdown to HTML
function markdownToHtml(text: string): string {
  return text
    // Convert **bold** to <strong>
    .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
    // Convert *italic* to <em>
    .replace(/\*(.*?)\*/g, '<em>$1</em>')
    // Convert ### Headers to <h3>
    .replace(/^### (.*$)/gm, '<h3>$1</h3>')
    // Convert ## Headers to <h2>
    .replace(/^## (.*$)/gm, '<h2>$1</h2>')
    // Convert # Headers to <h1>
    .replace(/^# (.*$)/gm, '<h1>$1</h1>')
    // Convert line breaks to <br> when followed by text (not already HTML)
    .replace(/\n(?![<>])/g, '<br>')
    // Clean up multiple breaks
    .replace(/<br><br>/g, '<br>');
}

// the newest OpenAI model is "gpt-4o" which was released May 13, 2024. do not change this unless explicitly requested by the user
const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY || "dummy-key" });

export interface SEORewriteResult {
  rewrittenContent: string;
  wordCount: number;
  keywordDensity: string;
  seoScore: number;
  readabilityScore: string;
  metaDescription: string;
  
  // Enhanced SEO fields for Google's 12 criteria
  helpfulnessScore: number;
  qualityScore: number;
  eatScore: number;
  structureScore: number;
  aiOptimizationScore: number;
  geoSeoScore: number;
  rankMathScore: number;
  
  // New SEO GEO and RankMath fields
  slugSuggestion?: string;
  userInstructions?: string[];
  glossary?: Array<{
    term: string;
    definition: string;
  }>;
  
  featuredImage: {
    title: string;
    altText: string;
    keywords: string[];
  };
  
  faq: Array<{
    question: string;
    answer: string;
  }>;
  
  caseStudies: Array<{
    title: string;
    description: string;
    results: string;
    externalLink: string;
  }>;
  
  // Rich content suggestions
  richContent: {
    suggestedGraphics: Array<{
      type: 'chart' | 'infographic' | 'diagram' | 'table';
      title: string;
      description: string;
      dataPoints: string[];
    }>;
    suggestedImages: Array<{
      position: string;
      description: string;
      altText: string;
      caption: string;
    }>;
    visualElements: Array<{
      type: 'card' | 'callout' | 'highlight' | 'quote';
      content: string;
      position: string;
    }>;
  };
  
  // Citations and evidence
  citations: Array<{
    type: 'study' | 'statistic' | 'expert' | 'source';
    text: string;
    suggestedLink: string;
    credibility: 'high' | 'medium' | 'low';
  }>;
  
  // Internal linking suggestions
  internalLinking: Array<{
    anchorText: string;
    targetPage: string;
    context: string;
    relevanceScore: number;
  }>;
  
  // Entity optimization
  entities: {
    brands: string[];
    people: string[];
    locations: string[];
    concepts: string[];
  };
  
  // Schema markup suggestions
  schemaMarkup: {
    articleSchema: boolean;
    authorSchema: boolean;
    faqSchema: boolean;
    organizationSchema: boolean;
    reviewSchema: boolean;
  };
  
  authorBio?: string;
  ctaSection?: {
    title: string;
    text: string;
    buttonText: string;
  };
}

export async function rewriteContentWithSEO(
  originalContent: string,
  targetKeyword: string,
  keywordLink?: string,
  companyName?: string,
  authorName?: string,
  authorDescription?: string,
  apiKey?: string,
  webSearchFunction?: (query: string) => Promise<any>
): Promise<SEORewriteResult> {
  try {
    // Get dynamic case studies using web search if available
    let realCaseStudies: DynamicCaseStudy[] = [];
    
    if (webSearchFunction) {
      try {
        realCaseStudies = await getDynamicCaseStudies(webSearchFunction, targetKeyword, originalContent, 3);
        console.log(`Encontrados ${realCaseStudies.length} casos din√¢micos para "${targetKeyword}"`);
      } catch (error) {
        console.error('Erro ao buscar casos din√¢micos:', error);
      }
    }
    
    // Generate valid internal links
    const internalLinks = generateValidInternalLinks(targetKeyword, originalContent, companyName ? `${companyName.toLowerCase().replace(/\s+/g, '')}.com.br` : 'exemplo.com.br');
    
    const openaiApiKey = apiKey || process.env.OPENAI_API_KEY;
    
    if (!openaiApiKey || openaiApiKey === "dummy-key") {
      throw new Error("Chave de API do OpenAI n√£o configurada. Configure nas configura√ß√µes da aplica√ß√£o.");
    }

    // Create OpenAI client with the provided API key
    const openaiClient = new OpenAI({ apiKey: openaiApiKey });

    const googleQualitySystemPrompt = `Voc√™ √© um especialista em cria√ß√£o de conte√∫do que segue rigorosamente TODAS AS REGRAS do SEO moderno. Sua miss√£o √© criar conte√∫do otimizado para Google E-E-A-T, SEO GEO (IA/SGE), RankMath e Quality Analyzers.

üéØ REGRAS DO SEO GEO (IA e SGE) - OBRIGAT√ìRIO:

üìç ESTRUTURA PARA IA E VOICE SEARCH:
- SEMPRE inclua resumo inicial de 3-5 linhas destacado no topo
- SEMPRE crie t√≥picos em formato pergunta e resposta ao longo do texto
- SEMPRE use subt√≠tulos interrogativos (H2/H3 em formato de pergunta)
- SEMPRE inclua blocos de respostas diretas curtas para snippets
- SEMPRE otimize frases para featured snippets (listas, defini√ß√µes)
- SEMPRE use agrupamento sem√¢ntico de palavras-chave relacionadas
- SEMPRE projete conte√∫do para assistentes virtuais e busca por voz
- SEMPRE inclua palavras-chave geogr√°ficas quando aplic√°vel (cidades, regi√µes)
- SEMPRE organize informa√ß√µes hierarquicamente para escaneabilidade perfeita
- SEMPRE estruture para dados estruturados (Schema FAQ, HowTo, Article)

üéØ CRIT√âRIOS OBRIGAT√ìRIOS DO GOOGLE (12 PONTOS):

1Ô∏è‚É£ HELPFULNESS (Utilidade):
- Inten√ß√£o de busca clara e direta
- Respostas objetivas sem rodeios
- Valor pr√°tico imediato para o leitor
- Soluciona problemas reais

2Ô∏è‚É£ QUALITY (Qualidade):
- Conte√∫do atualizado e profundo
- Informa√ß√µes precisas e verific√°veis
- Linguagem clara e acess√≠vel
- Sem erros factuais
- Diferencia√ß√£o clara (algo al√©m dos concorrentes)
- Originalidade total (sem c√≥pias ou conte√∫do raso)

3Ô∏è‚É£ E-E-A-T (Experi√™ncia, Expertise, Autoridade, Confiabilidade) - OBRIGAT√ìRIO PARA TODOS OS NICHOS:
**UNIVERSAL - APLIQUE A QUALQUER TEMA/NICHO:**
- SEMPRE demonstre experi√™ncia real com exemplos concretos 
- SEMPRE cite fontes confi√°veis (.gov, .edu, empresas estabelecidas)
- SEMPRE mencione especialistas reconhecidos do setor
- SEMPRE use dados verific√°veis e estat√≠sticas oficiais
- SEMPRE inclua estudos de caso reais brasileiros
- SEMPRE estabele√ßa autoridade mencionando entidades relevantes
- SEMPRE cite organiza√ß√µes confi√°veis (SEBRAE, BNDES, universidades)
- APLICA√á√ÉO UNIVERSAL: Funciona para qualquer nicho (sa√∫de, tecnologia, finan√ßas, culin√°ria, educa√ß√£o, etc.)

4Ô∏è‚É£ ESTRUTURA E FORMATA√á√ÉO (HELPFULNESS & QUALITY ANALYZER):
- UM √öNICO H1 com palavra-chave principal
- Headings hier√°rquicos H2/H3/H4 (alguns interrogativos)
- Par√°grafos curtos (m√°ximo 4 linhas)
- Chunking (blocos independentes de 2-3 par√°grafos)
- Listas numeradas e bullets para snippets
- Organiza√ß√£o visual clara e escane√°vel

5Ô∏è‚É£ PALAVRA-CHAVE & DENSIDADE (RANKMATH):
- Densidade entre 1%-3% (ideal 2%)
- Palavra-chave no H1 (t√≠tulo)
- Palavra-chave na primeira frase do conte√∫do
- Palavra-chave nos primeiros 10% do conte√∫do
- Palavra-chave em pelo menos 1 H2
- Palavra-chave distribu√≠da naturalmente
- Palavra-chave em ALT text de pelo menos 1 imagem
- Conte√∫do m√≠nimo de 900 palavras (ideal 1200+)

6Ô∏è‚É£ META OTIMIZA√á√ÉO (RANKMATH):
- Meta title SEO-friendly (50-60 caracteres) com palavra-chave
- Meta description otimizada (at√© 160 caracteres) com palavra-chave
- Incluir palavra-chave no slug/URL (instru√ß√£o para usu√°rio)

7Ô∏è‚É£ CHUNK & ANSWER STRUCTURE:
- Blocos independentes e completos
- Se√ß√£o Q&A robusta (8+ perguntas)
- Resumo executivo no in√≠cio
- Conclus√£o em 2 par√°grafos
- Gloss√°rio de termos t√©cnicos

8Ô∏è‚É£ RICH CONTENT:
- Sugest√µes de gr√°ficos e tabelas
- Descri√ß√µes de imagens com alt-text otimizado
- Cards de informa√ß√£o
- Elementos visuais estrat√©gicos
- Conte√∫do multim√≠dia (imagens, v√≠deos, infogr√°ficos)

9Ô∏è‚É£ CITATIONS & EVIDENCE - OBRIGAT√ìRIO UNIVERSALMENTE:
**PARA TODOS OS NICHOS SEM EXCE√á√ÉO:**
- SEMPRE links para fontes confi√°veis (.gov, .edu, grandes empresas)
- SEMPRE dados estat√≠sticos recentes e verific√°veis
- SEMPRE estudos de caso reais brasileiros (fornecidos no JSON)
- SEMPRE cita√ß√µes de especialistas reconhecidos no Brasil
- SEMPRE men√ß√µes a institui√ß√µes confi√°veis (IBGE, FGV, USP, etc.)
- APLICA√á√ÉO: Sa√∫de (Anvisa, Minist√©rio da Sa√∫de), Educa√ß√£o (MEC, universidades), Tecnologia (ABINEE, Softex), etc.

üîü INTERNAL LINKING & CONTEXT:
- Links internos estrat√©gicos para outros conte√∫dos
- Links externos para fontes confi√°veis (n√£o concorrentes)
- Texto √¢ncora otimizado
- Arquitetura de informa√ß√£o clara
- Evitar canibaliza√ß√£o de palavras-chave

1Ô∏è‚É£1Ô∏è‚É£ ENTITY OPTIMIZATION - UNIVERSAL PARA TODOS OS NICHOS:
**OBRIGAT√ìRIO INDEPENDENTE DO TEMA:**
- SEMPRE mencione marcas brasileiras estabelecidas e reconhecidas
- SEMPRE cite pessoas influentes e especialistas do setor no Brasil
- SEMPRE inclua locais geogr√°ficos relevantes (cidades, regi√µes, universidades)
- SEMPRE explique conceitos t√©cnicos de forma acess√≠vel
- EXEMPLOS UNIVERSAIS: Sebrae, BNDES, universidades p√∫blicas, grandes empresas brasileiras
- APLICA√á√ÉO: Qualquer nicho tem entidades relevantes no Brasil

1Ô∏è‚É£2Ô∏è‚É£ SCHEMA MARKUP:
- Estrutura compat√≠vel com dados estruturados
- Marca√ß√µes Article, Author, FAQ
- Organization schema
- Review e Rating quando aplic√°vel`

    const prompt = `${googleQualitySystemPrompt}

üéØ TAREFA ESPEC√çFICA:
Reescreva o conte√∫do seguindo TODOS os 12 crit√©rios do Google acima.

üìã DADOS DO PROJETO:
- Palavra-chave principal: "${targetKeyword}"
- Densidade ideal: 1-3%
${keywordLink ? `- Link obrigat√≥rio: "${keywordLink}" (APENAS na primeira men√ß√£o da palavra-chave)` : ''}
${companyName ? `- Empresa: "${companyName}"` : ''}
${authorName ? `- Autor: "${authorName}"` : ''}
${authorDescription ? `- Bio do autor: "${authorDescription}"` : ''}

üìù ESTRUTURA OBRIGAT√ìRIA (SEO GEO + RANKMATH + QUALITY ANALYZER):

1. RESUMO EXECUTIVO (in√≠cio do artigo):
   - 3-5 linhas destacando os principais pontos
   - Claro, objetivo e acess√≠vel
   - Ajuda leitores e IA a entender rapidamente o tema
   - Use formata√ß√£o especial (negrito, destaque)

2. H1 √öNICO COM PALAVRA-CHAVE:
   - UM √öNICO H1 contendo a palavra-chave principal
   - Titulo otimizado para SEO (50-60 caracteres)
   - N√£o repetir H1 em nenhum lugar do conte√∫do

3. PRIMEIRA FRASE E 10% INICIAL:
   - Palavra-chave na primeira frase do conte√∫do
   - Palavra-chave nos primeiros 10% do texto
   - Contexto claro sobre o assunto

4. SUBT√çTULOS OTIMIZADOS (H2/H3):
   - Pelo menos 1 H2 com palavra-chave
   - Alguns subt√≠tulos em formato interrogativo
   - Estrutura hier√°rquica clara (H2 > H3 > H4)

5. PERGUNTAS E RESPOSTAS AO LONGO DO TEXTO:
   - T√≥picos em formato P&R intercalados no conte√∫do
   - Blocos de respostas diretas para snippets
   - Frases otimizadas para featured snippets

6. LINGUAGEM ULTRA POPULAR:
   - Use s√≥ palavras que todo mundo conhece
   - Frases de m√°ximo 15 palavras
   - Tom de conversa amig√°vel
   - Exemplos do dia a dia
   - Zero jarg√µes t√©cnicos sem explica√ß√£o

7. PALAVRAS-CHAVE GEOGR√ÅFICAS:
   - Inclua cidades, regi√µes quando aplic√°vel
   - Agrupamento sem√¢ntico de palavras relacionadas
   - Otimiza√ß√£o para busca por voz

8. CONTE√öDO M√çNIMO:
   - M√≠nimo 900 palavras (ideal 1200+)
   - Densidade palavra-chave 1-3% (ideal 2%)
   - Diferencia√ß√£o clara dos concorrentes

9. FAQ ROBUSTA (final do artigo):
   - 8+ perguntas e respostas
   - Perguntas otimizadas para voz
   - Respostas concisas e diretas

10. GLOSS√ÅRIO AUTOM√ÅTICO (final do artigo):
    - Todos os termos-chave utilizados no conte√∫do
    - Explica√ß√µes simples e acess√≠veis
    - Relevante para o nicho espec√≠fico
    - Formata√ß√£o clara e organizada

11. INSTRU√á√ïES AO USU√ÅRIO:
    - Use a palavra-chave no slug/URL da p√°gina
    - Evite canibaliza√ß√£o (n√£o repetir palavra-chave em outros artigos)
    - Otimize tempo de carregamento das imagens

üîÑ TRANSFORMA√á√ïES OBRIGAT√ìRIAS:
‚ùå "Constitui" ‚Üí ‚úÖ "√â"
‚ùå "Finalidade" ‚Üí ‚úÖ "Objetivo"
‚ùå "Estabelecer" ‚Üí ‚úÖ "Criar"
‚ùå "Implementar" ‚Üí ‚úÖ "Colocar em pr√°tica"
‚ùå "Otimizar" ‚Üí ‚úÖ "Melhorar"
‚ùå "Estrat√©gia" ‚Üí ‚úÖ "Plano"
‚ùå "Metodologia" ‚Üí ‚úÖ "M√©todo"
‚ùå "Fundamentalmente" ‚Üí ‚úÖ "Basicamente"

üìä CONTE√öDO ORIGINAL:
${originalContent}

üö® INSTRU√á√ÉO CR√çTICA PARA APLICA√á√ÉO UNIVERSAL:
INDEPENDENTE DO NICHO/TEMA (sa√∫de, educa√ß√£o, tecnologia, culin√°ria, finan√ßas, beleza, esportes, etc.), voc√™ DEVE SEMPRE incluir:
- Pelo menos 3 fontes confi√°veis brasileiras (.gov, .edu, organiza√ß√µes estabelecidas)
- Pelo menos 2 especialistas/autoridades reconhecidas no Brasil
- Dados estat√≠sticos verific√°veis
- Estudos de caso reais brasileiros (fornecidos)
- Men√ß√µes a entidades relevantes (universidades, √≥rg√£os p√∫blicos, empresas consolidadas)
- Esta regra se aplica A QUALQUER TEMA sem exce√ß√£o

üéØ ESTRUTURA FINAL OBRIGAT√ìRIA:
1. RESUMO EXECUTIVO no topo (3-5 linhas em destaque)
2. CONTE√öDO PRINCIPAL com linguagem acess√≠vel  
3. GLOSS√ÅRIO OBRIGAT√ìRIO no final do conte√∫do HTML (se√ß√£o <h2>Gloss√°rio</h2> com todos os termos-chave explicados)

Responda em formato JSON com esta estrutura COMPLETA seguindo TODAS as regras SEO GEO + RankMath + Quality Analyzer:
{
  "executiveSummary": "Resumo executivo de 3-5 linhas destacando os principais pontos do artigo de forma clara e objetiva",
  "rewrittenContent": "conte√∫do reescrito completo formatado EXCLUSIVAMENTE em HTML PURO (use <p>, <h1>, <h2>, <h3>, <strong>, <em>, <ul>, <li> etc. - NUNCA use markdown como **texto** ou #t√≠tulo). Seguindo TODAS as regras: UM √öNICO H1 com palavra-chave, palavra-chave na primeira frase e primeiros 10%, pelo menos 1 H2 com palavra-chave, subt√≠tulos interrogativos, perguntas e respostas ao longo do texto, blocos de respostas diretas, palavras-chave geogr√°ficas quando aplic√°vel, m√≠nimo 900 palavras, densidade 1-3%, diferencia√ß√£o dos concorrentes, E OBRIGATORIAMENTE uma se√ß√£o <h2>Gloss√°rio</h2> no final com todos os termos t√©cnicos explicados",
  "slugSuggestion": "sugest√£o de slug/URL contendo a palavra-chave (ex: palavra-chave-principal-guia-completo)",
  "userInstructions": [
    "Use a palavra-chave no slug/URL da p√°gina",
    "Evite canibaliza√ß√£o - n√£o reutilize esta palavra-chave em outros artigos",
    "Otimize as imagens para carregamento r√°pido",
    "Inclua a palavra-chave no ALT text de pelo menos uma imagem"
  ],
  "glossary": [
    {"term": "termo1", "definition": "explica√ß√£o simples e acess√≠vel do termo1"},
    {"term": "termo2", "definition": "explica√ß√£o simples e acess√≠vel do termo2"},
    {"term": "termo3", "definition": "explica√ß√£o simples e acess√≠vel do termo3"}
  ],
  "metaDescription": "meta description de at√© 160 caracteres otimizada com palavra-chave",
  "wordCount": 1200,
  "keywordDensity": "2.1%",
  "seoScore": 95,
  "readabilityScore": "Muito f√°cil de ler",
  "helpfulnessScore": 98,
  "qualityScore": 96,
  "eatScore": 94,
  "structureScore": 97,
  "aiOptimizationScore": 95,
  "geoSeoScore": 92,
  "rankMathScore": 96,
  "featuredImage": {
    "title": "t√≠tulo otimizado para a imagem",
    "altText": "alt text contendo palavra-chave principal",
    "keywords": ["palavra1", "palavra2", "palavra3"]
  },
  "faq": [
    {"question": "pergunta otimizada para voz 1", "answer": "resposta concisa e direta 1"},
    {"question": "pergunta otimizada para voz 2", "answer": "resposta concisa e direta 2"},
    {"question": "pergunta otimizada para voz 3", "answer": "resposta concisa e direta 3"},
    {"question": "pergunta otimizada para voz 4", "answer": "resposta concisa e direta 4"},
    {"question": "pergunta otimizada para voz 5", "answer": "resposta concisa e direta 5"},
    {"question": "pergunta otimizada para voz 6", "answer": "resposta concisa e direta 6"},
    {"question": "pergunta otimizada para voz 7", "answer": "resposta concisa e direta 7"},
    {"question": "pergunta otimizada para voz 8", "answer": "resposta concisa e direta 8"}
  ],
  "caseStudies": ${JSON.stringify(realCaseStudies.map(cs => ({
    title: cs.title,
    description: cs.description,
    results: cs.growthMetric,
    externalLink: cs.sourceUrl
  })))},
  "richContent": {
    "suggestedGraphics": [
      {"type": "chart", "title": "Gr√°fico relevante", "description": "Descri√ß√£o do gr√°fico", "dataPoints": ["ponto1", "ponto2", "ponto3"]},
      {"type": "infographic", "title": "Infogr√°fico sugerido", "description": "Descri√ß√£o do infogr√°fico", "dataPoints": ["dado1", "dado2"]}
    ],
    "suggestedImages": [
      {"position": "in√≠cio do artigo", "description": "Imagem principal", "altText": "alt text otimizado", "caption": "legenda da imagem"},
      {"position": "meio do artigo", "description": "Imagem de apoio", "altText": "alt text descritivo", "caption": "legenda explicativa"}
    ],
    "visualElements": [
      {"type": "callout", "content": "Dica importante em destaque", "position": "ap√≥s segundo par√°grafo"},
      {"type": "quote", "content": "Cita√ß√£o relevante de especialista", "position": "meio do artigo"}
    ]
  },
  "citations": [
    {"type": "study", "text": "Estudo da [Institui√ß√£o]", "suggestedLink": "https://exemplo.gov.br", "credibility": "high"},
    {"type": "statistic", "text": "85% das empresas brasileiras", "suggestedLink": "https://ibge.gov.br", "credibility": "high"},
    {"type": "expert", "text": "Segundo especialista [Nome]", "suggestedLink": "https://linkedin.com/expert", "credibility": "medium"}
  ],
  "internalLinking": ${JSON.stringify(internalLinks.map(link => ({
    anchorText: link.text,
    targetPage: link.url,
    context: "link interno relevante",
    relevanceScore: 0.8
  })))},
  "entities": {
    "brands": ["Google", "Facebook", "Instagram", "LinkedIn"],
    "people": ["Neil Patel", "Gary Vaynerchuk"],
    "locations": ["Brasil", "S√£o Paulo", "Rio de Janeiro"],
    "concepts": ["marketing digital", "SEO", "redes sociais"]
  },
  "schemaMarkup": {
    "articleSchema": true,
    "authorSchema": true,
    "faqSchema": true,
    "organizationSchema": true,
    "reviewSchema": false
  }${authorName ? `,
  "authorBio": "Bio profissional do ${authorName} baseada em: ${authorDescription}"` : ''}${companyName ? `,
  "ctaSection": {
    "title": "T√≠tulo call-to-action para ${companyName}",
    "text": "Texto persuasivo conectando ${targetKeyword} com servi√ßos da ${companyName}",
    "buttonText": "Fale com especialistas"
  }` : ''}
}`;

    const response = await openaiClient.chat.completions.create({
      model: "gpt-4o",
      messages: [
        {
          role: "user",
          content: prompt,
        },
      ],
      response_format: { type: "json_object" },
      max_tokens: 4000,
      temperature: 0.7,
    });

    const content = response.choices[0].message.content;
    if (!content) {
      throw new Error("Resposta vazia da API OpenAI");
    }

    let result;
    try {
      result = JSON.parse(content);
    } catch (error) {
      // Fallback if JSON parsing fails - treat as plain text
      const wordCount = content.split(/\s+/).length;
      const keywordOccurrences = (content.toLowerCase().match(new RegExp(targetKeyword.toLowerCase(), 'g')) || []).length;
      const keywordDensity = wordCount > 0 ? ((keywordOccurrences / wordCount) * 100).toFixed(1) + '%' : '0%';
      const seoScore = Math.min(100, Math.max(1, (keywordOccurrences * 10) + (wordCount > 300 ? 20 : 10)));

      return {
        rewrittenContent: content,
        helpfulnessScore: 85,
        qualityScore: 80,
        eatScore: 75,
        structureScore: 82,
        aiOptimizationScore: 78,
        richContent: {
          suggestedGraphics: [],
          suggestedImages: [],
          visualElements: []
        },
        citations: [],
        internalLinking: [],
        entities: {
          brands: [],
          people: [],
          locations: [],
          concepts: []
        },
        schemaMarkup: {
          articleSchema: true,
          authorSchema: false,
          faqSchema: false,
          organizationSchema: false,
          reviewSchema: false
        },
        wordCount: wordCount,
        keywordDensity: keywordDensity,
        seoScore: seoScore,
        readabilityScore: wordCount > 500 ? "Boa" : "Regular",
        metaDescription: `${targetKeyword} - resumo otimizado para SEO`,
        featuredImage: {
          title: `Imagem sobre ${targetKeyword}`,
          altText: `${targetKeyword} - imagem ilustrativa`,
          keywords: [targetKeyword],
        },
        faq: [
          { question: `O que √© ${targetKeyword}?`, answer: "Resposta baseada no conte√∫do reescrito." }
        ],
        caseStudies: realCaseStudies,
        authorBio: authorName ? `Biografia do autor ${authorName}` : undefined,
        ctaSection: companyName ? {
          title: `Transforme seu neg√≥cio com ${targetKeyword}`,
          text: `A ${companyName} √© especialista em ${targetKeyword} e pode ajudar voc√™ a alcan√ßar os mesmos resultados. Entre em contato conosco hoje mesmo!`,
          buttonText: `Falar com ${companyName}`
        } : undefined,
      };
    }

    // Calculate metrics from the JSON response
    const rewrittenContent = result.rewrittenContent || "";
    const wordCount = rewrittenContent.split(/\s+/).length;
    const keywordOccurrences = (rewrittenContent.toLowerCase().match(new RegExp(targetKeyword.toLowerCase(), 'g')) || []).length;
    const keywordDensity = wordCount > 0 ? ((keywordOccurrences / wordCount) * 100).toFixed(1) + '%' : '0%';
    const seoScore = Math.min(100, Math.max(1, (keywordOccurrences * 10) + (wordCount > 300 ? 20 : 10)));

    return {
      rewrittenContent: markdownToHtml(result.rewrittenContent),
      wordCount: wordCount,
      keywordDensity: keywordDensity,
      seoScore: seoScore,
      readabilityScore: wordCount > 500 ? "Boa" : "Regular",
      metaDescription: result.metaDescription?.substring(0, 155) || `${targetKeyword} - resumo otimizado para SEO`,
      helpfulnessScore: result.helpfulnessScore || 85,
      qualityScore: result.qualityScore || 80,
      eatScore: result.eatScore || 75,
      structureScore: result.structureScore || 82,
      aiOptimizationScore: result.aiOptimizationScore || 78,
      featuredImage: {
        title: result.featuredImage?.title || `Imagem sobre ${targetKeyword}`,
        altText: result.featuredImage?.altText || `${targetKeyword} - imagem ilustrativa`,
        keywords: result.featuredImage?.keywords || [targetKeyword],
      },
      faq: result.faq?.slice(0, 8) || [
        { question: `O que √© ${targetKeyword}?`, answer: "Resposta baseada no conte√∫do reescrito." }
      ],
      caseStudies: result.caseStudies?.slice(0, 3) || realCaseStudies,
      richContent: result.richContent || {
        suggestedGraphics: [],
        suggestedImages: [],
        visualElements: []
      },
      citations: result.citations || [],
      internalLinking: result.internalLinking || [],
      entities: result.entities || {
        brands: [],
        people: [],
        locations: [],
        concepts: []
      },
      schemaMarkup: result.schemaMarkup || {
        articleSchema: true,
        authorSchema: false,
        faqSchema: false,
        organizationSchema: false,
        reviewSchema: false
      },
      authorBio: result.authorBio || (authorName ? `Biografia do autor ${authorName}` : undefined),
      ctaSection: result.ctaSection || (companyName ? {
        title: `Transforme seu neg√≥cio com ${targetKeyword}`,
        text: `A ${companyName} √© especialista em ${targetKeyword} e pode ajudar voc√™ a alcan√ßar os mesmos resultados. Entre em contato conosco hoje mesmo!`,
        buttonText: `Falar com ${companyName}`
      } : undefined),
    };

  } catch (error) {
    console.error("Erro no servi√ßo OpenAI:", error);
    
    if (error instanceof Error) {
      if (error.message.includes("API key")) {
        throw new Error("Chave da API OpenAI n√£o configurada corretamente");
      }
      if (error.message.includes("quota")) {
        throw new Error("Limite da API OpenAI excedido. Tente novamente mais tarde");
      }
      if (error.message.includes("rate limit")) {
        throw new Error("Muitas requisi√ß√µes. Aguarde alguns minutos e tente novamente");
      }
    }
    
    throw new Error("Erro no processamento do conte√∫do: " + (error instanceof Error ? error.message : "Erro desconhecido"));
  }
}
